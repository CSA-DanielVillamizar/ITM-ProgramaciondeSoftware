M9 Snippets
-----------

SampleComponent.razor
---------------------


<h3>Inbox</h3>

@if (@MessageCount > 0)
{
    <h4>You currently have @MessageCount questions from employees!</h4>
}
else
{
    <h4>No questions from employees! All good!</h4>
}

@code{
    
    [Parameter]
    public int MessageCount { get; set; }


}


SampleComponentTests.razor
--------------------------


@code {
    
    [Fact]
    public void RenderSampleComponentWithValueGreaterThanZero()
    {
        //Arrange
        using var ctx = new TestContext();

        var cut = ctx.Render(@<SampleComponent MessageCount="3" />);

        cut.MarkupMatches("<h3>Inbox</h3><h4>You currently have 3 questions from employees!</h4>"); 
    }

    [Fact]
    public void RenderSampleComponentWithZero()
    {
        //Arrange
        using var ctx = new TestContext();

        var cut = ctx.Render(@<SampleComponent MessageCount="0" />);

        cut.MarkupMatches("<h3>Inbox</h3><h4>No questions from employees! All good!</h4>"); 
    }
}


EmployeeCardTests 
-----------------

@using BethanysPieShopHRM.Shared.Domain

@inherits TestContext

@code {

    private Employee _employee;

    public EmployeeCardTests()
    {
        var jobCategory = new JobCategory { JobCategoryId = 3, JobCategoryName = "Management" };
        var country = new Country { CountryId = 1, Name = "Belgium" };

        _employee = new Employee
            {
                MaritalStatus = MaritalStatus.Single,
                BirthDate = new DateTime(1989, 3, 11),
                City = "Brussels",
                Email = "bethany@bethanyspieshop.com",
                EmployeeId = 1,
                FirstName = "Bethany",
                LastName = "Smith",
                Gender = Gender.Female,
                PhoneNumber = "324777888978978",
                Smoker = false,
                Street = "Grote Markt 1",
                Zip = "1000",
                JobCategory = jobCategory,
                JobCategoryId = jobCategory.JobCategoryId,
                Comment = "Lorem Ipsum",
                ExitDate = null,
                JoinedDate = new DateTime(2015, 3, 1),
                Country = country,
                CountryId = country.CountryId
            };
    }

}



 [Fact]
    public void RenderEmployeeCardDetailNavLink()
    {
        var cut = Render(@<EmployeeCard Employee="_employee" />);

        cut.Find("#detailnavlink").MarkupMatches(@"<a href=""employeeedit/1"" id=""detailnavlink"" class=""btn btn-outline-primary btn-sm mb-1"">Edit employee</a>");
    }